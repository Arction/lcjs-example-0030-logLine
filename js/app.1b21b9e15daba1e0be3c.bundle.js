(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,i)=>{const a=i(89),s=i(863),{lightningChart:r,ColorHEX:o,SolidLine:l,SolidFill:n,emptyLine:d,Themes:c}=a,{createProgressiveFunctionGenerator:x}=s,h=r().ChartXY({theme:c[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,defaultAxisY:{type:"logarithmic",base:"10"}}).setTitle("Logarithmic Axis vs Linear Axis"),S=h.getDefaultAxisY().setTitle("Logarithmic Y Axis").setTitleMargin(10),m=h.addAxisY({type:"linear"}).setTitle("Linear Y Axis").setTickStrategy("Numeric",(e=>e.setMinorTickStyle((e=>e.setGridStrokeStyle(d))).setMajorTickStyle((e=>e.setGridStrokeStyle(d))))),g=h.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.3}),k=[{label:"f(x) = x",xStart:.1,xEnd:10,Y:e=>e},{label:"f(x) = 10^x",xStart:.1,xEnd:3,Y:e=>10**e}];Promise.all(k.map((e=>x().setStart(e.xStart).setEnd(e.xEnd).setStep(.1).setSamplingFunction(e.Y).generate().toPromise()))).then((e=>{e.forEach(((e,t)=>{const i=k[t],a=[];[m,S].forEach(((s,r)=>{const o=h.addLineSeries({yAxis:s}).setCursorResultTableFormatter(((e,t,a,s)=>e.addRow(`${i.label} (${0===r?"linear":"logarithmic"})`).addRow("X","",a.toFixed(1)).addRow("Y","",s.toFixed(1)))).setName(i.label).setStrokeStyle((e=>e.setThickness(5))).add(e);console.log(o.getBoundaries()),0===r?(g.add(o),g.setEntries(((e,i)=>{i===o&&(a[t]=e)}))):o.attach(a[t])}))})),m.fit(),S.fit()}))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);